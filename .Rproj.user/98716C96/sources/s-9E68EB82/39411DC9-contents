---
title: '2017-04-17'
author: "CHIFU"
date: "2019年4月17日"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

```{r}
studentRecord <-
  list(
    學號="410073058",
    姓名="王小明",
    性別="男",
    學年平均成績=list(
      一年級=88,
      二年級=90.3,
      三年級=92,
      四年級=95
    )
  )

studentRecord
```

```{r}
plasticContainer <- list(
  greenBox=c("paper","scissor"),     # location 1
  redBox=c(1,3,2.5),               # location 2
  blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
```

```{r}
plasticContainer[["greenBox"]]
plasticContainer[[1]]
```

要取出紙，要怎麼延伸拿取？
Way1:
```{r}
x <- plasticContainer[["greenBox"]]
x[[1]]
```

Way2:
```{r}
plasticContainer[["greenBox"]][[1]]
```

```{r}
plasticContainer[[1]][[1]]
```


```{r}
plasticContainer[[2]]
plasticContainer[["blueBox"]]
```

請前面取出成績單物件的個經元素
```{r}
gradepaper <- c(
  個經=90,
  總經=77,
  統計=88
)
```

```{r}
gradepaper[["個經"]]
```

針對studentRecord物件：

請取出姓名元素。

請取出三年級學年平均成績。
```{r}
studentRecord[["姓名"]]
studentRecord[["學年平均成績"]][[3]]
```

```{r}
studentRecord[[4]][[3]]
```



```{r}
plasticContainer
plasticContainer[c("greenBox","redBox")] 
plasticContainer[c(1,2)]
```

```{r}
extract1 <- plasticContainer[c("greenBox")]
extract1
extract2 <- plasticContainer[[c("greenBox")]]
extract2
```

請各自由extract1及extract2取出“paper”元素值
```{r}
extract1[[1]][[1]]
extract2[[1]]
```
#extract1保有原來母結構list,第一個[[1]]從list中取出大箱子中取出greenBox,第二個[[1]]從greenBox中取出paper

```{r}
plasticContainer
length(plasticContainer)
plasticContainer[c(T,F,T)]
```

```{r}
gradepaper
gradepaper[c(T,T,F)]
```

```{r}
plasticContainer$greenBox
plasticContainer[["greenBox"]]
```
#$和[]的使用方法一樣

```{r}
your_github_username <- "tpemartin"
your_practice_reponame <- "107-2-inclass-practice"
library(httr)
library(stringr)
str_replace_all(
  "https://api.github.com/repos/:owner/:repo/commits",
  c(
    ":owner"=your_github_username,
    ":repo"=your_practice_reponame
    )
  ) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
```

```{r}
commitCheckStatement
```

有一種date time格式如“2019-04-10T14:38:45Z”，它是ISO8601標準下的一種寫法，其中Z表示此格式為UTC時間——許多國際性的公司如Google, GitHub等都是用ISO8601格式在記錄日期時間。


```{r}
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
```

```{r}
filmVotingData$Timestamp
filmVotingData[["Timestamp"]]
filmVotingData$`Timestamp`
```

```{r}
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
```




```{r}
library(stringr)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數

```

birthday只能有8位元，str_length()可計算每個元素的位元長度。請產生一個logical vector稱為logiCorrect，TRUE表示剛好8位元。
```{r}
logiCorrect <-  str_length(birthday)==8
logiCorrect
```

只留下birthday輸入正確的人，請統計各別片名支持人數。
```{r}
favoriteTwo[logiCorrect] -> validFavoriteTwo
validFavoriteTwo
```


```{r}
Vector1 <- letters[1:6]
Vector1

names(Vector1)
```













